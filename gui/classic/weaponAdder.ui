<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>magicItemAdder_window</class>
 <widget class="QDialog" name="magicItemAdder_window">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>660</width>
    <height>534</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>Dialog</string>
  </property>
  <property name="styleSheet">
   <string notr="true">background: rgb(160, 160, 160)</string>
  </property>
  <layout class="QGridLayout" name="gridLayout">
   <item row="1" column="0">
    <widget class="QPushButton" name="weaponAdderCancel_button">
     <property name="styleSheet">
      <string notr="true">QPushButton{
border-style: outset;
border-width: 1px;
border-radius: 5px;
border-color: black;
background-color:rgb(255, 221, 221);
padding:4px;
}

QPushButton::hover{
background-color: rgb(255, 184, 184);
}

QPushButton::pressed{
background-color: rgb(255, 140, 140);
}

</string>
     </property>
     <property name="text">
      <string>Cancel</string>
     </property>
     <property name="autoDefault">
      <bool>false</bool>
     </property>
    </widget>
   </item>
   <item row="1" column="1">
    <widget class="QPushButton" name="weaponAdderAdd_button">
     <property name="styleSheet">
      <string notr="true">QPushButton{
border-style: outset;
border-width: 1px;
border-radius: 5px;
border-color: black;
background-color:rgb(218, 255, 212);
padding:4px;
}

QPushButton::hover{
background-color: rgb(182, 255, 181);
}

QPushButton::pressed{
background-color: rgb(135, 255, 129);
}

</string>
     </property>
     <property name="text">
      <string>Add</string>
     </property>
     <property name="autoDefault">
      <bool>false</bool>
     </property>
     <property name="default">
      <bool>true</bool>
     </property>
    </widget>
   </item>
   <item row="0" column="0" colspan="2">
    <layout class="QGridLayout" name="gridLayout_2">
     <item row="0" column="3" rowspan="2">
      <spacer name="horizontalSpacer_4">
       <property name="orientation">
        <enum>Qt::Horizontal</enum>
       </property>
       <property name="sizeType">
        <enum>QSizePolicy::Fixed</enum>
       </property>
       <property name="sizeHint" stdset="0">
        <size>
         <width>10</width>
         <height>20</height>
        </size>
       </property>
      </spacer>
     </item>
     <item row="1" column="4">
      <widget class="QSpinBox" name="attackBonus_entry">
       <property name="minimumSize">
        <size>
         <width>40</width>
         <height>20</height>
        </size>
       </property>
       <property name="cursor">
        <cursorShape>WhatsThisCursor</cursorShape>
       </property>
       <property name="statusTip">
        <string>Spell attack bonus is auto-calculated, but you can add an additional boost here</string>
       </property>
       <property name="styleSheet">
        <string notr="true">QSpinBox::hover{
background-color: rgb(225, 225, 225)
}

QSpinBox{
background-color:white
}</string>
       </property>
       <property name="minimum">
        <number>-5</number>
       </property>
      </widget>
     </item>
     <item row="4" column="0" colspan="5">
      <layout class="QHBoxLayout" name="horizontalLayout">
       <item>
        <widget class="QSpinBox" name="weaponAdderNumberOfDice_entry">
         <property name="maximumSize">
          <size>
           <width>16777215</width>
           <height>30</height>
          </size>
         </property>
         <property name="statusTip">
          <string>Type of hit dice (number of sides)</string>
         </property>
         <property name="styleSheet">
          <string notr="true">QSpinBox{
border-style: outset;
border-width: 1px;
border-radius: 6px;
border-color: black;
padding-right:6px;
background:white;
padding:4
}

QSpinBox::hover{
background-color: rgb(225, 225, 225)
}

</string>
         </property>
         <property name="buttonSymbols">
          <enum>QAbstractSpinBox::NoButtons</enum>
         </property>
        </widget>
       </item>
       <item>
        <widget class="QLabel" name="weaponD_label">
         <property name="maximumSize">
          <size>
           <width>16777215</width>
           <height>30</height>
          </size>
         </property>
         <property name="font">
          <font>
           <family>Rockwell</family>
           <pointsize>14</pointsize>
          </font>
         </property>
         <property name="styleSheet">
          <string notr="true">QLabel{
border-style: outset;
border-width: 1px;
border-radius: 5px;
border-color: black;
background-color:rgb(217,217,217);
padding:1px;
}</string>
         </property>
         <property name="text">
          <string>D</string>
         </property>
        </widget>
       </item>
       <item>
        <widget class="QSpinBox" name="weaponAdderTypeOfDice_entry">
         <property name="maximumSize">
          <size>
           <width>16777215</width>
           <height>30</height>
          </size>
         </property>
         <property name="statusTip">
          <string>Type of hit dice (number of sides)</string>
         </property>
         <property name="styleSheet">
          <string notr="true">QSpinBox{
border-style: outset;
border-width: 1px;
border-radius: 6px;
border-color: black;
padding-right:6px;
background:white;
padding:4
}

QSpinBox::hover{
background-color: rgb(225, 225, 225)
}

</string>
         </property>
         <property name="buttonSymbols">
          <enum>QAbstractSpinBox::NoButtons</enum>
         </property>
        </widget>
       </item>
      </layout>
     </item>
     <item row="0" column="4">
      <widget class="QLabel" name="weaponAttackBonus_">
       <property name="cursor">
        <cursorShape>ArrowCursor</cursorShape>
       </property>
       <property name="styleSheet">
        <string notr="true">QLabel{
border-style: outset;
border-width: 1px;
border-radius: 5px;
border-color: black;
background-color:rgb(217,217,217);
padding:3px;
}</string>
       </property>
       <property name="frameShape">
        <enum>QFrame::Box</enum>
       </property>
       <property name="frameShadow">
        <enum>QFrame::Raised</enum>
       </property>
       <property name="text">
        <string>Attack bonus boost</string>
       </property>
      </widget>
     </item>
     <item row="7" column="0" colspan="5">
      <widget class="QTextEdit" name="weaponAdderDescription_textArea">
       <property name="cursor" stdset="0">
        <cursorShape>SizeVerCursor</cursorShape>
       </property>
       <property name="styleSheet">
        <string notr="true">QTextEdit{
background-color: white;
border-style: outset;
border-width: 1px;
border-radius: 13px;
border-color: black
}

QTextEdit::hover{
background-color: rgb(225, 225, 225);
}</string>
       </property>
       <property name="acceptRichText">
        <bool>false</bool>
       </property>
      </widget>
     </item>
     <item row="6" column="0" colspan="5">
      <widget class="QLabel" name="weaponAdderDescription_label">
       <property name="cursor">
        <cursorShape>ArrowCursor</cursorShape>
       </property>
       <property name="styleSheet">
        <string notr="true">QLabel{
border-style: outset;
border-width: 1px;
border-radius: 5px;
border-color: black;
background-color:rgb(217,217,217);
padding:3px;
}</string>
       </property>
       <property name="frameShape">
        <enum>QFrame::Box</enum>
       </property>
       <property name="frameShadow">
        <enum>QFrame::Raised</enum>
       </property>
       <property name="text">
        <string>Description:</string>
       </property>
      </widget>
     </item>
     <item row="4" column="6" rowspan="4" colspan="3">
      <layout class="QGridLayout" name="gridLayout_4">
       <item row="18" column="0">
        <widget class="QCheckBox" name="special_checkBox">
         <property name="cursor">
          <cursorShape>WhatsThisCursor</cursorShape>
         </property>
         <property name="statusTip">
          <string>You might use acrobatics for keeping yourself standing on your feet, doing parkcour, or trying to make hard-to-make jumps</string>
         </property>
         <property name="styleSheet">
          <string notr="true">QCheckBox{
background-color: white;
border-style: outset;
border-width: 1px;
border-radius: 6px;
border-color: black;
padding: 2}

QCheckBox::indicator{
border-color:black;
border-style:outset;
border-width:1px;
border-radius:5px;
background-color:white
}

QCheckBox::indicator:hover{
background-color: rgb(225, 225, 225)
}

QCheckBox::indicator:checked{
background-color: rgb(75,75,75)
}</string>
         </property>
         <property name="text">
          <string>Special (see description)</string>
         </property>
        </widget>
       </item>
       <item row="20" column="0">
        <widget class="QCheckBox" name="thrown_checkBox">
         <property name="cursor">
          <cursorShape>WhatsThisCursor</cursorShape>
         </property>
         <property name="statusTip">
          <string>You might use acrobatics for keeping yourself standing on your feet, doing parkcour, or trying to make hard-to-make jumps</string>
         </property>
         <property name="styleSheet">
          <string notr="true">QCheckBox{
background-color: white;
border-style: outset;
border-width: 1px;
border-radius: 6px;
border-color: black;
padding: 2}

QCheckBox::indicator{
border-color:black;
border-style:outset;
border-width:1px;
border-radius:5px;
background-color:white
}

QCheckBox::indicator:hover{
background-color: rgb(225, 225, 225)
}

QCheckBox::indicator:checked{
background-color: rgb(75,75,75)
}</string>
         </property>
         <property name="text">
          <string>Thrown</string>
         </property>
        </widget>
       </item>
       <item row="12" column="0">
        <widget class="QCheckBox" name="loading_checkBox">
         <property name="styleSheet">
          <string notr="true">QCheckBox{
background-color: white;
border-style: outset;
border-width: 1px;
border-radius: 6px;
border-color: black;
padding: 2}

QCheckBox::indicator{
border-color:black;
border-style:outset;
border-width:1px;
border-radius:5px;
background-color:white
}

QCheckBox::indicator:hover{
background-color: rgb(225, 225, 225)
}

QCheckBox::indicator:checked{
background-color: rgb(75,75,75)
}</string>
         </property>
         <property name="text">
          <string>Loading</string>
         </property>
        </widget>
       </item>
       <item row="10" column="0">
        <widget class="QCheckBox" name="light_checkBox">
         <property name="styleSheet">
          <string notr="true">QCheckBox{
background-color: white;
border-style: outset;
border-width: 1px;
border-radius: 6px;
border-color: black;
padding: 2}

QCheckBox::indicator{
border-color:black;
border-style:outset;
border-width:1px;
border-radius:5px;
background-color:white
}

QCheckBox::indicator:hover{
background-color: rgb(225, 225, 225)
}

QCheckBox::indicator:checked{
background-color: rgb(75,75,75)
}</string>
         </property>
         <property name="text">
          <string>Light</string>
         </property>
        </widget>
       </item>
       <item row="4" column="0">
        <widget class="QCheckBox" name="ammunition_checkBox">
         <property name="styleSheet">
          <string notr="true">QCheckBox{
background-color: white;
border-style: outset;
border-width: 1px;
border-radius: 6px;
border-color: black;
padding: 2}

QCheckBox::indicator{
border-color:black;
border-style:outset;
border-width:1px;
border-radius:5px;
background-color:white
}

QCheckBox::indicator:hover{
background-color: rgb(225, 225, 225)
}

QCheckBox::indicator:checked{
background-color: rgb(75,75,75)
}</string>
         </property>
         <property name="text">
          <string>Ammunition</string>
         </property>
        </widget>
       </item>
       <item row="6" column="0">
        <widget class="QCheckBox" name="finesse_checkBox">
         <property name="styleSheet">
          <string notr="true">QCheckBox{
background-color: white;
border-style: outset;
border-width: 1px;
border-radius: 6px;
border-color: black;
padding: 2}

QCheckBox::indicator{
border-color:black;
border-style:outset;
border-width:1px;
border-radius:5px;
background-color:white
}

QCheckBox::indicator:hover{
background-color: rgb(225, 225, 225)
}

QCheckBox::indicator:checked{
background-color: rgb(75,75,75)
}</string>
         </property>
         <property name="text">
          <string>Finesse</string>
         </property>
        </widget>
       </item>
       <item row="14" column="0">
        <widget class="QCheckBox" name="range_checkBox">
         <property name="styleSheet">
          <string notr="true">QCheckBox{
background-color: white;
border-style: outset;
border-width: 1px;
border-radius: 6px;
border-color: black;
padding: 2}

QCheckBox::indicator{
border-color:black;
border-style:outset;
border-width:1px;
border-radius:5px;
background-color:white
}

QCheckBox::indicator:hover{
background-color: rgb(225, 225, 225)
}

QCheckBox::indicator:checked{
background-color: rgb(75,75,75)
}</string>
         </property>
         <property name="text">
          <string>Range</string>
         </property>
        </widget>
       </item>
       <item row="8" column="0">
        <widget class="QCheckBox" name="heavy_checkBox">
         <property name="styleSheet">
          <string notr="true">QCheckBox{
background-color: white;
border-style: outset;
border-width: 1px;
border-radius: 6px;
border-color: black;
padding: 2}

QCheckBox::indicator{
border-color:black;
border-style:outset;
border-width:1px;
border-radius:5px;
background-color:white
}

QCheckBox::indicator:hover{
background-color: rgb(225, 225, 225)
}

QCheckBox::indicator:checked{
background-color: rgb(75,75,75)
}</string>
         </property>
         <property name="text">
          <string>Heavy</string>
         </property>
        </widget>
       </item>
       <item row="24" column="0">
        <widget class="QCheckBox" name="versatile_checkBox">
         <property name="cursor">
          <cursorShape>WhatsThisCursor</cursorShape>
         </property>
         <property name="statusTip">
          <string>You might use acrobatics for keeping yourself standing on your feet, doing parkcour, or trying to make hard-to-make jumps</string>
         </property>
         <property name="styleSheet">
          <string notr="true">QCheckBox{
background-color: white;
border-style: outset;
border-width: 1px;
border-radius: 6px;
border-color: black;
padding: 2}

QCheckBox::indicator{
border-color:black;
border-style:outset;
border-width:1px;
border-radius:5px;
background-color:white
}

QCheckBox::indicator:hover{
background-color: rgb(225, 225, 225)
}

QCheckBox::indicator:checked{
background-color: rgb(75,75,75)
}</string>
         </property>
         <property name="text">
          <string>Versatile</string>
         </property>
        </widget>
       </item>
       <item row="0" column="0" alignment="Qt::AlignTop">
        <widget class="QLabel" name="weaponProperties_label">
         <property name="maximumSize">
          <size>
           <width>16777215</width>
           <height>30</height>
          </size>
         </property>
         <property name="font">
          <font>
           <family>Rockwell</family>
           <pointsize>14</pointsize>
          </font>
         </property>
         <property name="cursor">
          <cursorShape>ArrowCursor</cursorShape>
         </property>
         <property name="styleSheet">
          <string notr="true">QLabel{
border-style: outset;
border-width: 1px;
border-radius: 5px;
border-color: black;
background-color:rgb(217,217,217);
padding:1px;
}</string>
         </property>
         <property name="text">
          <string>Properties</string>
         </property>
        </widget>
       </item>
       <item row="22" column="0">
        <widget class="QCheckBox" name="twoHanded_checkBox">
         <property name="cursor">
          <cursorShape>WhatsThisCursor</cursorShape>
         </property>
         <property name="statusTip">
          <string>You might use acrobatics for keeping yourself standing on your feet, doing parkcour, or trying to make hard-to-make jumps</string>
         </property>
         <property name="styleSheet">
          <string notr="true">QCheckBox{
background-color: white;
border-style: outset;
border-width: 1px;
border-radius: 6px;
border-color: black;
padding: 2}

QCheckBox::indicator{
border-color:black;
border-style:outset;
border-width:1px;
border-radius:5px;
background-color:white
}

QCheckBox::indicator:hover{
background-color: rgb(225, 225, 225)
}

QCheckBox::indicator:checked{
background-color: rgb(75,75,75)
}</string>
         </property>
         <property name="text">
          <string>Two-Handed</string>
         </property>
        </widget>
       </item>
       <item row="16" column="0">
        <widget class="QCheckBox" name="reach_checkBox">
         <property name="styleSheet">
          <string notr="true">QCheckBox{
background-color: white;
border-style: outset;
border-width: 1px;
border-radius: 6px;
border-color: black;
padding: 2}

QCheckBox::indicator{
border-color:black;
border-style:outset;
border-width:1px;
border-radius:5px;
background-color:white
}

QCheckBox::indicator:hover{
background-color: rgb(225, 225, 225)
}

QCheckBox::indicator:checked{
background-color: rgb(75,75,75)
}</string>
         </property>
         <property name="text">
          <string>Reach</string>
         </property>
        </widget>
       </item>
       <item row="2" column="0">
        <spacer name="verticalSpacer_3">
         <property name="orientation">
          <enum>Qt::Vertical</enum>
         </property>
         <property name="sizeType">
          <enum>QSizePolicy::Fixed</enum>
         </property>
         <property name="sizeHint" stdset="0">
          <size>
           <width>20</width>
           <height>10</height>
          </size>
         </property>
        </spacer>
       </item>
       <item row="5" column="0">
        <spacer name="verticalSpacer_6">
         <property name="orientation">
          <enum>Qt::Vertical</enum>
         </property>
         <property name="sizeHint" stdset="0">
          <size>
           <width>20</width>
           <height>40</height>
          </size>
         </property>
        </spacer>
       </item>
       <item row="9" column="0">
        <spacer name="verticalSpacer_8">
         <property name="orientation">
          <enum>Qt::Vertical</enum>
         </property>
         <property name="sizeHint" stdset="0">
          <size>
           <width>20</width>
           <height>40</height>
          </size>
         </property>
        </spacer>
       </item>
       <item row="7" column="0">
        <spacer name="verticalSpacer_7">
         <property name="orientation">
          <enum>Qt::Vertical</enum>
         </property>
         <property name="sizeHint" stdset="0">
          <size>
           <width>20</width>
           <height>40</height>
          </size>
         </property>
        </spacer>
       </item>
       <item row="13" column="0">
        <spacer name="verticalSpacer_10">
         <property name="orientation">
          <enum>Qt::Vertical</enum>
         </property>
         <property name="sizeHint" stdset="0">
          <size>
           <width>20</width>
           <height>40</height>
          </size>
         </property>
        </spacer>
       </item>
       <item row="15" column="0">
        <spacer name="verticalSpacer_11">
         <property name="orientation">
          <enum>Qt::Vertical</enum>
         </property>
         <property name="sizeHint" stdset="0">
          <size>
           <width>20</width>
           <height>40</height>
          </size>
         </property>
        </spacer>
       </item>
       <item row="11" column="0">
        <spacer name="verticalSpacer_9">
         <property name="orientation">
          <enum>Qt::Vertical</enum>
         </property>
         <property name="sizeHint" stdset="0">
          <size>
           <width>20</width>
           <height>40</height>
          </size>
         </property>
        </spacer>
       </item>
       <item row="27" column="0">
        <spacer name="verticalSpacer_4">
         <property name="orientation">
          <enum>Qt::Vertical</enum>
         </property>
         <property name="sizeHint" stdset="0">
          <size>
           <width>20</width>
           <height>40</height>
          </size>
         </property>
        </spacer>
       </item>
       <item row="17" column="0">
        <spacer name="verticalSpacer_12">
         <property name="orientation">
          <enum>Qt::Vertical</enum>
         </property>
         <property name="sizeHint" stdset="0">
          <size>
           <width>20</width>
           <height>40</height>
          </size>
         </property>
        </spacer>
       </item>
       <item row="21" column="0">
        <spacer name="verticalSpacer_14">
         <property name="orientation">
          <enum>Qt::Vertical</enum>
         </property>
         <property name="sizeHint" stdset="0">
          <size>
           <width>20</width>
           <height>40</height>
          </size>
         </property>
        </spacer>
       </item>
       <item row="19" column="0">
        <spacer name="verticalSpacer_13">
         <property name="orientation">
          <enum>Qt::Vertical</enum>
         </property>
         <property name="sizeHint" stdset="0">
          <size>
           <width>20</width>
           <height>40</height>
          </size>
         </property>
        </spacer>
       </item>
       <item row="23" column="0">
        <spacer name="verticalSpacer_15">
         <property name="orientation">
          <enum>Qt::Vertical</enum>
         </property>
         <property name="sizeHint" stdset="0">
          <size>
           <width>20</width>
           <height>40</height>
          </size>
         </property>
        </spacer>
       </item>
       <item row="26" column="0">
        <spacer name="verticalSpacer_16">
         <property name="orientation">
          <enum>Qt::Vertical</enum>
         </property>
         <property name="sizeHint" stdset="0">
          <size>
           <width>20</width>
           <height>40</height>
          </size>
         </property>
        </spacer>
       </item>
       <item row="25" column="0">
        <spacer name="verticalSpacer_17">
         <property name="orientation">
          <enum>Qt::Vertical</enum>
         </property>
         <property name="sizeHint" stdset="0">
          <size>
           <width>20</width>
           <height>40</height>
          </size>
         </property>
        </spacer>
       </item>
       <item row="3" column="0">
        <spacer name="verticalSpacer_18">
         <property name="orientation">
          <enum>Qt::Vertical</enum>
         </property>
         <property name="sizeHint" stdset="0">
          <size>
           <width>20</width>
           <height>40</height>
          </size>
         </property>
        </spacer>
       </item>
      </layout>
     </item>
     <item row="1" column="8">
      <widget class="QSpinBox" name="weight_entry">
       <property name="minimumSize">
        <size>
         <width>40</width>
         <height>20</height>
        </size>
       </property>
       <property name="cursor">
        <cursorShape>WhatsThisCursor</cursorShape>
       </property>
       <property name="statusTip">
        <string>Initiative score boost. Initiative is your dexterity modifier by default, but some things can increase it beyond that</string>
       </property>
       <property name="styleSheet">
        <string notr="true">QSpinBox::hover{
background-color: rgb(225, 225, 225)
}

QSpinBox{
background-color:white
}</string>
       </property>
      </widget>
     </item>
     <item row="5" column="0">
      <spacer name="verticalSpacer_5">
       <property name="orientation">
        <enum>Qt::Vertical</enum>
       </property>
       <property name="sizeType">
        <enum>QSizePolicy::Fixed</enum>
       </property>
       <property name="sizeHint" stdset="0">
        <size>
         <width>20</width>
         <height>20</height>
        </size>
       </property>
      </spacer>
     </item>
     <item row="0" column="6" alignment="Qt::AlignTop">
      <widget class="QLabel" name="damageType_label">
       <property name="cursor">
        <cursorShape>ArrowCursor</cursorShape>
       </property>
       <property name="styleSheet">
        <string notr="true">QLabel{
border-style: outset;
border-width: 1px;
border-radius: 5px;
border-color: black;
background-color:rgb(217,217,217);
padding:3px;
}</string>
       </property>
       <property name="frameShape">
        <enum>QFrame::Box</enum>
       </property>
       <property name="frameShadow">
        <enum>QFrame::Raised</enum>
       </property>
       <property name="text">
        <string>Damage type</string>
       </property>
      </widget>
     </item>
     <item row="0" column="0" alignment="Qt::AlignTop">
      <widget class="QLabel" name="weaponName_label">
       <property name="cursor">
        <cursorShape>ArrowCursor</cursorShape>
       </property>
       <property name="styleSheet">
        <string notr="true">QLabel{
border-style: outset;
border-width: 1px;
border-radius: 5px;
border-color: black;
background-color:rgb(217,217,217);
padding:3px;
}</string>
       </property>
       <property name="frameShape">
        <enum>QFrame::Box</enum>
       </property>
       <property name="frameShadow">
        <enum>QFrame::Raised</enum>
       </property>
       <property name="text">
        <string>Weapon (name)</string>
       </property>
      </widget>
     </item>
     <item row="0" column="5" rowspan="2">
      <spacer name="horizontalSpacer_2">
       <property name="orientation">
        <enum>Qt::Horizontal</enum>
       </property>
       <property name="sizeType">
        <enum>QSizePolicy::Fixed</enum>
       </property>
       <property name="sizeHint" stdset="0">
        <size>
         <width>10</width>
         <height>20</height>
        </size>
       </property>
      </spacer>
     </item>
     <item row="1" column="0" alignment="Qt::AlignTop">
      <widget class="QLineEdit" name="weaponAdderName_entry">
       <property name="minimumSize">
        <size>
         <width>0</width>
         <height>20</height>
        </size>
       </property>
       <property name="cursor">
        <cursorShape>SizeVerCursor</cursorShape>
       </property>
       <property name="styleSheet">
        <string notr="true">QLineEdit{
background-color: white;
border-style: outset;
border-width: 1px;
border-radius: 6px;
border-color: black
}

QLineEdit::hover{
background-color: rgb(225, 225, 225);
}</string>
       </property>
      </widget>
     </item>
     <item row="8" column="0" colspan="10">
      <spacer name="verticalSpacer">
       <property name="orientation">
        <enum>Qt::Vertical</enum>
       </property>
       <property name="sizeType">
        <enum>QSizePolicy::Fixed</enum>
       </property>
       <property name="sizeHint" stdset="0">
        <size>
         <width>20</width>
         <height>20</height>
        </size>
       </property>
      </spacer>
     </item>
     <item row="2" column="0">
      <spacer name="verticalSpacer_2">
       <property name="orientation">
        <enum>Qt::Vertical</enum>
       </property>
       <property name="sizeType">
        <enum>QSizePolicy::Fixed</enum>
       </property>
       <property name="sizeHint" stdset="0">
        <size>
         <width>20</width>
         <height>20</height>
        </size>
       </property>
      </spacer>
     </item>
     <item row="0" column="9">
      <widget class="QLabel" name="magicItemAdderRarity_label_2">
       <property name="text">
        <string/>
       </property>
      </widget>
     </item>
     <item row="1" column="6" alignment="Qt::AlignTop">
      <widget class="QComboBox" name="weaponAdderDamageType_entry">
       <property name="minimumSize">
        <size>
         <width>0</width>
         <height>20</height>
        </size>
       </property>
       <property name="styleSheet">
        <string notr="true">QComboBox{
background-color: white;
border-style: outset;
border-width: 1px;
border-radius: 6px;
border-color: black
}

QComboBox QAbstractItemView {
    border: 2px solid darkgray;
    selection-background-color: rgb(220,220,220);
	color:black;
	background-color:rgb(150,150,150);
	border-style: outset;
	border-width: 1px;
	border-radius: 6px;
	border-color: black
}

QComboBox::hover{
background-color: rgb(225, 225, 225);
}

QComboBox::down-arrow:pressed {
    position: relative;
    top: 2px; left: 2px;
}</string>
       </property>
       <property name="sizeAdjustPolicy">
        <enum>QComboBox::AdjustToContents</enum>
       </property>
       <item>
        <property name="text">
         <string>Bludgeoning</string>
        </property>
       </item>
       <item>
        <property name="text">
         <string>Piercing</string>
        </property>
       </item>
       <item>
        <property name="text">
         <string>Slashing</string>
        </property>
       </item>
      </widget>
     </item>
     <item row="0" column="7">
      <spacer name="horizontalSpacer_3">
       <property name="orientation">
        <enum>Qt::Horizontal</enum>
       </property>
       <property name="sizeType">
        <enum>QSizePolicy::Fixed</enum>
       </property>
       <property name="sizeHint" stdset="0">
        <size>
         <width>10</width>
         <height>20</height>
        </size>
       </property>
      </spacer>
     </item>
     <item row="0" column="8">
      <widget class="QLabel" name="weight_label">
       <property name="cursor">
        <cursorShape>ArrowCursor</cursorShape>
       </property>
       <property name="styleSheet">
        <string notr="true">QLabel{
border-style: outset;
border-width: 1px;
border-radius: 5px;
border-color: black;
background-color:rgb(217,217,217);
padding:3px;
}</string>
       </property>
       <property name="frameShape">
        <enum>QFrame::Box</enum>
       </property>
       <property name="frameShadow">
        <enum>QFrame::Raised</enum>
       </property>
       <property name="text">
        <string>Weight (lb)</string>
       </property>
      </widget>
     </item>
     <item row="0" column="2">
      <widget class="QLabel" name="abilityModifier_label">
       <property name="cursor">
        <cursorShape>ArrowCursor</cursorShape>
       </property>
       <property name="styleSheet">
        <string notr="true">QLabel{
border-style: outset;
border-width: 1px;
border-radius: 5px;
border-color: black;
background-color:rgb(217,217,217);
padding:3px;
}</string>
       </property>
       <property name="frameShape">
        <enum>QFrame::Box</enum>
       </property>
       <property name="frameShadow">
        <enum>QFrame::Raised</enum>
       </property>
       <property name="text">
        <string>Ability Modifier</string>
       </property>
      </widget>
     </item>
     <item row="1" column="2">
      <widget class="QComboBox" name="abilityModifier_entry">
       <property name="styleSheet">
        <string notr="true">QComboBox{
background-color: white;
border-style: outset;
border-width: 1px;
border-radius: 6px;
border-color: black
}

QComboBox QAbstractItemView {
    border: 2px solid darkgray;
    selection-background-color: rgb(220,220,220);
	color:black;
	background-color:rgb(150,150,150);
	border-style: outset;
	border-width: 1px;
	border-radius: 6px;
	border-color: black
}

QComboBox::hover{
background-color: rgb(225, 225, 225);
}

QComboBox::down-arrow:pressed {
    position: relative;
    top: 2px; left: 2px;
}</string>
       </property>
       <property name="sizeAdjustPolicy">
        <enum>QComboBox::AdjustToContents</enum>
       </property>
       <property name="frame">
        <bool>true</bool>
       </property>
       <item>
        <property name="text">
         <string>Strength</string>
        </property>
       </item>
       <item>
        <property name="text">
         <string>Dextarity</string>
        </property>
       </item>
       <item>
        <property name="text">
         <string>Constitution</string>
        </property>
       </item>
       <item>
        <property name="text">
         <string>Intelligence</string>
        </property>
       </item>
       <item>
        <property name="text">
         <string>Wisdom</string>
        </property>
       </item>
       <item>
        <property name="text">
         <string>Charisma</string>
        </property>
       </item>
      </widget>
     </item>
     <item row="2" column="6" colspan="3">
      <widget class="QCheckBox" name="proficient_checkBox">
       <property name="cursor">
        <cursorShape>WhatsThisCursor</cursorShape>
       </property>
       <property name="statusTip">
        <string>Deception is lying, or misleading people</string>
       </property>
       <property name="styleSheet">
        <string notr="true">QCheckBox{
background-color: white;
border-style: outset;
border-width: 1px;
border-radius: 6px;
border-color: black;
padding: 2}

QCheckBox{
background-color: white
}

QCheckBox::hover{
background-color: rgb(245, 245, 245)
}

QCheckBox::indicator{
border-color:black;
border-style:outset;
border-width:1px;
border-radius:5px;
background-color:white
}

QCheckBox::indicator:hover{
background-color: rgb(225, 225, 225)
}

QCheckBox::indicator:checked{
background-color: rgb(75,75,75)
}</string>
       </property>
       <property name="text">
        <string>Proficient?</string>
       </property>
      </widget>
     </item>
     <item row="3" column="6">
      <spacer name="verticalSpacer_19">
       <property name="orientation">
        <enum>Qt::Vertical</enum>
       </property>
       <property name="sizeType">
        <enum>QSizePolicy::Fixed</enum>
       </property>
       <property name="sizeHint" stdset="0">
        <size>
         <width>20</width>
         <height>10</height>
        </size>
       </property>
      </spacer>
     </item>
    </layout>
   </item>
  </layout>
 </widget>
 <resources/>
 <connections/>
</ui>
